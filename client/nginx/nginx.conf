user nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    client_body_buffer_size 100k;
    client_header_buffer_size 1k;
    client_max_body_size 100k;
    large_client_header_buffers 2 1k;
    client_body_timeout 10;
    client_header_timeout 10;
    keepalive_timeout 5 5;
    send_timeout 10;
    

    ####################################
    #####         HTTP        ##########
    ####################################
    ### HTTP www.kiwe.app -> kiwe.app 리다이렉팅
    server {
        listen 80;
        listen [::]:80;
        server_name www.kiwe.app;

        # certbot-auto의 webroot 경로 폴더인 .well-known/acme-challenge의 위치를 알려줌
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://www.kiwe.app$request_uri;
        }
    }

    ### HTTP kiwe.app 처리 
    server {
        listen 80;
        listen [::]:80 default_server ipv6only=on;
        server_name kiwe.app;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://kiwe.app$request_uri;
        }
    }
    ####################################
    #####         HTTPS       ##########
    ####################################
    # HTTPS www.kiwe.app -> kiwe.app
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name www.kiwe.app;

        ssl_certificate /etc/letsencrypt/live/kiwe.app\ www.kiwe.app/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/kiwe.app\ www.kiwe.app/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/kiwe.app\ www.kiwe.app/fullchain.pem;
        
        include /etc/letsencrypt/options-ssl-nginx.conf; ### SSL 보안설정 ssl.conf 파일 위치 
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        
        location / {
            return 301 https://kiwe.app$request_uri;
        }
    }

    # HTTPS 최종목적지 메인도메인
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server ipv6only=on;
        server_name kiwe.app;

        ssl_certificate /etc/letsencrypt/live/kiwe.app\ www.kiwe.app/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/kiwe.app\ www.kiwe.app/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/kiwe.app\ www.kiwe.app/fullchain.pem;
        
        include /etc/letsencrypt/options-ssl-nginx.conf; ### SSL 보안설정 ssl.conf 파일 위치 
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # This would be the directory where your React app's static files are stored at
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        location / {
            try_files $uri $uri/ /index.html;
            add_header X-Frame-Options SAMEORIGIN;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";
        }

        # /api...로 들어오는 요청은 8080포트(서버)로 처리
        location /api {
            proxy_pass http://server:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }    
}


